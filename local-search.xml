<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Docker/"/>
    <url>/2024/07/27/Docker/</url>
    
    <content type="html"><![CDATA[<h3 id="Install-docker-engine"><a href="#Install-docker-engine" class="headerlink" title="Install docker engine"></a><a href="https://docs.docker.com/engine/install/ubuntu/">Install docker engine</a></h3><h3 id="Manage-docker-as-a-non-root-user"><a href="#Manage-docker-as-a-non-root-user" class="headerlink" title="Manage docker as a non-root user"></a><a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user">Manage docker as a non-root user</a></h3><ol><li><a href="https://ruanyifeng.com/blog/2018/02/docker-tutorial.html">https://ruanyifeng.com/blog/2018/02/docker-tutorial.html</a></li></ol><p>Docker is an open-source engine that automates the deployment of applications into containers.<br>Docker is designed to enhance consistency by ensuring the environment in which your developers write code matches the environments into which your applications are deployed.</p><p>Docker components</p><ul><li>The Docker client and server (Docker Engine)</li><li>Docker Images</li><li>Registries</li><li>Docker Containers<br>![[Pasted image 20240418145113.png]]</li></ul><p>A Docker container is:</p><ul><li>An image format</li><li>A set of standard operations</li><li>An execution environment</li></ul><p>Ensuring Docker is ready: <code>sudo docker info</code></p><p>Interactive container<br>Create new containers: <code>sudo docker run --name docker_name -i -t ubuntu /bin/bash</code></p><ul><li>You can use <code>--name</code> flag to name the container, in this case name the container <code>docker_name</code></li><li><code>-i</code> flag keeps STDIN open from the container</li><li><code>-t</code> tells Docker to assign a pseudo-tty to the container</li><li><code>ubuntu</code> is the image to use to create a container</li><li>We should tell Docker which command to run in our new container, in this case launching a Bash shell with the <code>/bin/bash</code> command<br><code>docker ps -a</code> show our a list of current containers.<br>When you’re done, type <code>exit</code>, and you’ll return to the command prompt of your host.<br>We can restart a stopped container liker so: <code>sudo docker start docker_name</code><br><code>docker attach docker_name</code>: You can check <em>&lt;\The Docker Book (James Turnbull): Chapter 3 - Attaching to a container&gt;</em></li></ul><p>Daemonized container</p><p>Listing Docker images <code>sudo docker images</code><br>Pulling the Docker images <code>sudo docker pull image_name:tag</code><br>Searching for images <code>sudo docker search image_name</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Configuration/"/>
    <url>/2024/07/27/Configuration/</url>
    
    <content type="html"><![CDATA[<p><strong>alias</strong> command lets you create shortcuts for commands</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">alias [option] [name]=&#x27;[value]&#x27;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">example</span><br>alias move=&#x27;mv -i&#x27;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/CMake/"/>
    <url>/2024/07/27/CMake/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install cmake==23232 <span class="hljs-comment"># Check av version</span><br>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn module<br></code></pre></td></tr></table></figure><p>cmake -S .&#x2F; -B .&#x2F;build&#x2F;<br>cmake –build .&#x2F;build&#x2F; -j8</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Placement%20new%20operator%20in%20C++/"/>
    <url>/2024/07/27/Placement%20new%20operator%20in%20C++/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.geeksforgeeks.org/placement-new-operator-cpp/">https://www.geeksforgeeks.org/placement-new-operator-cpp/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Reflection%20System/"/>
    <url>/2024/07/27/Reflection%20System/</url>
    
    <content type="html"><![CDATA[<p>Reference:</p><ol><li><a href="https://preshing.com/20180116/a-primitive-reflection-system-in-cpp-part-1/">A Flexible Reflection System in C++: Part 1</a></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Unified%20Modeling%20Language%20(UML)/"/>
    <url>/2024/07/27/Unified%20Modeling%20Language%20(UML)/</url>
    
    <content type="html"><![CDATA[<h2 id="Class-Diagram"><a href="#Class-Diagram" class="headerlink" title="Class Diagram"></a>Class Diagram</h2><p>Class diagrams are used to visually represent the structure and relationships of classes within a system.</p><blockquote><p>[!TIP]<br>Classes are depicted as boxes, each containing three compartments for the class name, attributes, and methods. Lines connecting classes illustrate associations, showing relationships such as ont-to-one or one-to-many.</p></blockquote><h3 id="UML-Class-Notation"><a href="#UML-Class-Notation" class="headerlink" title="UML Class Notation"></a>UML Class Notation</h3><p>![[Pasted image 20240507104339.png]]</p><p><strong>Visibility notation</strong> indicate the access level of attributes and methods. Common visibility notations include:</p><ul><li>+ for public</li><li>- for private</li><li># for protected</li></ul><p><strong>Parameter directionality</strong> refers to the indication of the flow of information between classes through method parameters. There are three main parameter directionality notations used in class diagrams:</p><ul><li>In(Input)</li><li>Out(Output)</li><li>InOut(Input and Output)</li></ul><h3 id="Relationships-between-classes"><a href="#Relationships-between-classes" class="headerlink" title="Relationships between classes"></a>Relationships between classes</h3><p>Relationships between classes describe how classes are connected or interact with each other within a system.<br>![[Pasted image 20240507133210.png]]</p><p>Reference:</p><ol><li><a href="https://www.geeksforgeeks.org/unified-modeling-language-uml-class-diagrams/">Class Diagram | Unified Modeling Language (UML)</a></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Unnamed%20and%20inline%20namesapces/"/>
    <url>/2024/07/27/Unnamed%20and%20inline%20namesapces/</url>
    
    <content type="html"><![CDATA[<h2 id="Anonymous-namespaces"><a href="#Anonymous-namespaces" class="headerlink" title="Anonymous namespaces"></a>Anonymous namespaces</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">namespace</span> &#123; <span class="hljs-comment">// anonymous namespace</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-comment">// can only be accessed in this file</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>Anonymous namespaces are typically used when you have a lot of content that you want to ensure stays local to a given file.</li><li>Keep <em>program-defined types (what the meaning of  it?)</em> local to the file</li></ul><h2 id="Inline-namespaces"><a href="#Inline-namespaces" class="headerlink" title="Inline namespaces"></a>Inline namespaces</h2><p>An inline namespace is a namespace that is typically used to version content. Much like an unnamed namespace, anything declared inside an inline namespace is considered part of the parent namespace; however, unlike unnamed namespaces, inline namespaces don’t affect linkage.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">namespace</span> Version1 &#123;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> </span>&#123;&#125;<br>&#125;<br><br><span class="hljs-keyword">inline</span> <span class="hljs-keyword">namespace</span> Version2 &#123;<br><span class="hljs-keyword">namespace</span> &#123;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> </span>&#123;&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-built_in">foo</span>(); <span class="hljs-comment">// call the inline version, equal to Version2::foo();</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Untitled/"/>
    <url>/2024/07/27/Untitled/</url>
    
    <content type="html"><![CDATA[<blockquote><p>[!quote] “In software development, learning is not a big part of the job. <strong>It is the job</strong>.”    – <em>Woody Zuill</em></p></blockquote><h2 id="Areas-of-Application"><a href="#Areas-of-Application" class="headerlink" title="Areas of Application"></a>Areas of Application</h2><p>Operating systems, Compilers, Artificial Intelligence, Image Editing, Web browser, High-Performance Computing, Embedded systems,<br>Web indexing, Scientific Computing, Database, Video Games, Entertainment, Finance</p><h2 id="C-Philosophy"><a href="#C-Philosophy" class="headerlink" title="C++ Philosophy"></a>C++ Philosophy</h2><ul><li><strong>Zero Overhead Principle (zero-cost abstraction)</strong></li><li><strong>Type safety: Statically typed language</strong>: Enforce safety at compile time whenever possible</li><li><strong>Programming model</strong>: compartmentalization</li><li><strong>Predictable runtime</strong></li><li><strong>Low resources</strong></li><li><strong>Well suited for static analysis</strong></li><li><strong>Portability</strong></li></ul><h2 id="The-C-Type-System"><a href="#The-C-Type-System" class="headerlink" title="The C++ Type System"></a>The C++ Type System</h2><p>C++ is a <strong>strong typed</strong> and <strong>statically typed</strong> language.</p><h4 id="Type-Categories"><a href="#Type-Categories" class="headerlink" title="Type Categories"></a>Type Categories</h4><p>![[Pasted image 20240511100226.png]]</p><h4 id="Conversion-Rules"><a href="#Conversion-Rules" class="headerlink" title="Conversion Rules"></a>Conversion Rules</h4><h5 id="Implicit-type-conversion-rules"><a href="#Implicit-type-conversion-rules" class="headerlink" title="Implicit type conversion rules"></a>Implicit type conversion rules</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/Vim%20global%20configuration/"/>
    <url>/2024/07/27/Vim%20global%20configuration/</url>
    
    <content type="html"><![CDATA[<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">syntax on<br><span class="hljs-built_in">set</span> showmode<br>filetype indent on<br><span class="hljs-built_in">set</span> number<br><span class="hljs-built_in">set</span> relativenumber<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">tabstop</span>=4<br><span class="hljs-built_in">set</span> cursorline<br><span class="hljs-built_in">set</span> autoindent<br>colorscheme delek<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">guifont</span>=Courier/14<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/27/hello-world/"/>
    <url>/2024/07/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/software/detail/Miniconda/"/>
    <url>/2024/07/27/software/detail/Miniconda/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-Linux-x86_64.sh<br>bash Miniconda3-latest-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><p>conda install jupyter</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/software/detail/Zotero+Sci-Hub/"/>
    <url>/2024/07/27/software/detail/Zotero+Sci-Hub/</url>
    
    <content type="html"><![CDATA[<p>由于之前在推文<a href="https://link.zhihu.com/?target=https://mp.weixin.qq.com/s/QMSG24tgn4z8ShfE9pVYMg">更新版｜Zotero搭配Sci-Hub，真香！</a>中使用的Sci-Hub的<code>.se</code>近期挂掉了，因此有必要对本文进行更新下。</p><p>目前（截止2020.04.15），可用的Sci-Hub域名有以下几个：</p><ul><li><a href="https://link.zhihu.com/?target=https://sci-hub.tw">https://sci-hub.tw</a></li><li><a href="https://link.zhihu.com/?target=https://sci-hub.ren">https://sci-hub.ren</a></li><li><a href="https://link.zhihu.com/?target=https://sci-hub.si">https://sci-hub.si</a></li><li><a href="https://link.zhihu.com/?target=https://sci-hub.shop">https://sci-hub.shop</a></li></ul><p>如果你想及时获取Sci-Hub最新可用网址，可以到**青柠学术的GitHub网站[1]**查看，我已经帮大家汇总好了。</p><p>我近期在Zotero中使用的是<code>.ren</code>域名，理论上以上四个都可以使用，大家可以自行更换为其中一个。</p><p>顺便把我的完整代码贴出来：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;<br>    &quot;name&quot;:&quot;Sci-Hub&quot;,<br>    &quot;method&quot;:&quot;GET&quot;,<br>    &quot;url&quot;:&quot;https://sci-hub.ren/&#123;doi&#125;&quot;,<br>    &quot;mode&quot;:&quot;html&quot;,<br>    &quot;selector&quot;:&quot;#pdf&quot;,<br>    &quot;attribute&quot;:&quot;src&quot;,<br>    &quot;automatic&quot;:true<br>&#125;<br></code></pre></td></tr></table></figure><p>这里再提醒一下：</p><blockquote><p>“ 如果你没有使用任何代理，由于网络环境问题，可能会有少部分从Sci-Hub下载的PDF出现损坏的情况，这时你可以考虑将上述代码中的<code>https</code>改为<code>http</code>，或者更换其他可用的域名，情况可能会好转。另外，可以逛逛本文在**知乎的评论区[2]**，讨论的人还蛮多，说不从会有其他网友贡献更多好的办法。<br>”</p></blockquote><p>除了改动部分，以下内容保持和之前的一致。</p><hr><p>Sci-Hub有多香大家都知道！</p><p>Zotero有多香，你看了我的教程就知道了！</p><p><a href="https://link.zhihu.com/?target=https://mp.weixin.qq.com/s/V6nIE24UefJWi3HbydccaA">Zotero ，打造最佳文献生态（合集）</a></p><p>那要是Zotero+Sci-Hub，岂不是无敌了！</p><p>今天就教大家在Zotero内集成Sci-Hub，实现在Zotero中免费下载99%的文献！</p><h3 id="从Zotero-PDF-retrieval谈起"><a href="#从Zotero-PDF-retrieval谈起" class="headerlink" title="从Zotero PDF retrieval谈起"></a><strong>从Zotero PDF retrieval谈起</strong></h3><p>从Zotero 5.0.56版本开始，Zotero迎来了<code>PDF retrieval</code>功能。详情可见Zotero官网的文章<strong>“Improved PDF retrieval with Unpaywall integration”[3]</strong></p><p>该功能会在你用Zotero Connector保存文献时，自动检查Unpaywall上是否有可供下载的免费文献。</p><blockquote><p>“ Unpaywall能免费下载文献，但你不要以为它和Sci-Hub一样是非法的。其实Unpaywall是个非盈利性合法组织，它整合了数千个Open Access期刊或数据库，将免费文献集中之后开放API，从而供其他平台使用。<br>”</p></blockquote><p>假如你在网页端保存的文献是Open Access的，Zotero Connector就会将PDF同文献条目一起抓取，比如下面这样。</p><p><img src="https://pic4.zhimg.com/80/v2-40edda857bf28234e08e4be4d715568b_720w.jpg"></p><p>当然，对于已经在Zotero中却还没有PDF附件的文献条目，点击右键菜单中的<code>Find Available PDF</code>，即可下载文献，比如下面这样。</p><p><img src="https://pic2.zhimg.com/80/v2-fd8a22a2d93852a108eb652c2ed2e101_720w.jpg"></p><p>但是，毕竟Unpaywall只支持OA文献，而OA文献又只是少数。也就是说，通过Unpaywall无法解决付费文献的下载问题。</p><p>不过幸运的是，作为一款开源软件，Zotero的开发者为很多功能带来了可定制的能力，方便用户根据自己的喜好自定义。</p><p><code>PDF retrieval</code>功能也不例外，Zotero允许用户自定义PDF解析器（custom PDF resolvers），也就是说你可以将其他网站作为PDF解析器，来替代Unpaywall。</p><p>详情可以访问Zotero官网链接<strong>Custom PDF Resolvers[4]</strong></p><p>这为我们将Sci-Hub作为PDF resolver带来可能！</p><p>考虑到PDF resolver是内置在Zotero中的，这能保证我们能稳定使用该功能，就算Zotero更新了也丝毫不用担心，这一点就比使用第三方插件要有保障得多！</p><p>下面具体介绍如何将Sci-Hub作为PDF解析器！</p><h3 id="设置Sci-Hub作为PDF解析器"><a href="#设置Sci-Hub作为PDF解析器" class="headerlink" title="设置Sci-Hub作为PDF解析器"></a><strong>设置Sci-Hub作为PDF解析器</strong></h3><p>PDF resolvers的设置在Zotero的Config Editor中。</p><p>我们打开Zotero的首选项，进入<code>Advanced--&gt;Config Editor</code>。</p><p><img src="https://pic2.zhimg.com/80/v2-877b5ab8e63b46169630ebbbdb9b4885_720w.jpg"></p><p>搜索<code>extensions.zotero.findPDFs.resolvers</code>，如下。</p><p><img src="https://pic2.zhimg.com/80/v2-3c46d6021fd27cc9fe058235bc485395_720w.jpg"></p><p>双击<code>extensions.zotero.findPDFs.resolvers</code>，默认情况下是只有一对<code>[]</code>。</p><p><img src="https://pic4.zhimg.com/80/v2-c46f5e4a7d897811edfe11b97f86b54b_720w.jpg"></p><p>删除<code>[]</code>，并将以下代码粘贴进去。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;<br>    &quot;name&quot;:&quot;Sci-Hub&quot;,<br>    &quot;method&quot;:&quot;GET&quot;,<br>    &quot;url&quot;:&quot;https://sci-hub.ren/&#123;doi&#125;&quot;,<br>    &quot;mode&quot;:&quot;html&quot;,<br>    &quot;selector&quot;:&quot;#pdf&quot;,<br>    &quot;attribute&quot;:&quot;src&quot;,<br>    &quot;automatic&quot;:true<br>&#125;<br></code></pre></td></tr></table></figure><p>然后点击OK。</p><p><img src="https://pic3.zhimg.com/80/v2-1569b72fff0a2bff8fa8f2103c7bbd76_720w.jpg"></p><p>到此就成功将Sci-Hub配置为PDF解析器了，也就是说替代了默认的Unpaywall。</p><p>现在，无需重启Zotero，即可调用Sci-Hub免费下载文献了。</p><p>这里顺便提三点：</p><ol><li>在<code>&quot;url&quot;:&quot;https://sci-hub.ren/&#123;doi&#125;&quot;</code>中，目前可用的域名有<code>.tw</code>、<code>.ren</code>、<code>.si</code>、<code>.shop</code>，大家可以挑选其中一个，哪个用起来体验更好就用哪个。（当然，由于Sci-Hub经常更换域名，保不准改天哪个域名就挂了，或者有新的域名出来，因此此处的代码未来也会根据需要进行更新）</li><li>从<code>&quot;url&quot;:&quot;https://sci-hub.ren/&#123;doi&#125;&quot;</code>还能看到一点。由于Sci-Hub是通过<code>doi</code>下载文献的，因此该PDF解析器也需要doi。也就说你的文献必须要有doi，如果doi是空缺的，便无法通过PDF解析器免费下载文献。幸运的是，对于缺失doi的文献，我们可以通过插件**zotero-shortdoi[5]**插件一键抓取doi（参考文章<a href="https://link.zhihu.com/?target=https://mp.weixin.qq.com/s/9UAMrbfHKnmG4tZ7rvnnGA">zotero-shortdoi + Sci-Hub，让99%的文献都能被免费下载！</a>）。</li><li><code>&quot;automatic&quot;:true</code>，如果设置为true，Zotero会自动下载保存到Zotero中的文献的PDF。比如你用Zotero Connector保存了一些文献到Zotero，它便会自动帮你从Sci-Hub下载文献，并附在相应文献条目下。如果你不需要自动下载，可以设置为<code>&quot;automatic&quot;:false</code>。</li></ol><p>使用方法前面介绍过，主要有两种：</p><h3 id="第一种：Zotero-Connector"><a href="#第一种：Zotero-Connector" class="headerlink" title="第一种：Zotero Connector"></a><strong>第一种：Zotero Connector</strong></h3><p>通过Zotero Connector保存的文献，会自动下载PDF，无需任何操作。（看不到进度条，下载速度取决于网速）</p><h3 id="第二种：Find-Available-PDF"><a href="#第二种：Find-Available-PDF" class="headerlink" title="第二种：Find Available PDF"></a><strong>第二种：Find Available PDF</strong></h3><p>选中单篇或者多篇文献，手动点击右键菜单中的<code>Find Available PDF</code>，会弹出单独的窗口显示下载进度。同样，下载速度取决于网络速度。</p><p><img src="https://pic2.zhimg.com/80/v2-3df3d94c9ac45c5c70fc53bd9f35443d_720w.jpg"></p><p>关于<code>下载速度取决于网络速度</code>有下面两点需要注意；</p><ul><li>如果你未开启任何网络加速器（比如梯z），即正常使用网络，可以认为Find Available PDF的进度接近你手动从Sci-Hub下载文献的速度。大家应该都体验过，不开启加速器的情况下，Sci-Hub的访问速度还是比较慢的，甚至有时候PDF加载不出来。</li><li>假如你开启了加速器，推荐使用全局代理模式，而不是PAC模式，因为两种情况下Find Available PDF的进度差异比较大（当然如果你不介意下载速度，使用PAC模式也是可以的）。不过提醒一下，下载完文献，记得切回到PAC模式，因为全局模式下Zotero无法同步文献到坚果云。</li></ul><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a><strong>相关链接</strong></h3><p>[1]Sci-Hub最新可用网址查询: <em><a href="https://link.zhihu.com/?target=https://iseex.github.io/scihub/">https://iseex.github.io/scihub/</a></em><br>[2]Zotero + Sci-Hub知乎评论区: <em><a href="https://zhuanlan.zhihu.com/p/112141757">https://zhuanlan.zhihu.com/p/112141757</a></em><br>[3]Improved PDF retrieval with Unpaywall integration: <em><a href="https://link.zhihu.com/?target=https://www.zotero.org/blog/improved-pdf-retrieval-with-unpaywall-integration/">https://www.zotero.org/blog/improved-pdf-retrieval-with-unpaywall-integration/</a></em><br>[4]Custom PDF Resolvers:<a href="https://link.zhihu.com/?target=https://www.zotero.org/support/kb/custom_pdf_resolvers">https://www.zotero.org/support/kb/custom_pdf_resolvers</a>_<br>[5]zotero-shortdoi: <em><a href="https://link.zhihu.com/?target=https://github.com/bwiernik/zotero-shortdoi/releases">https://github.com/bwiernik/zotero-shortdoi/releases</a></em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/software/detail/Visual%20Studio%20Code/"/>
    <url>/2024/07/27/software/detail/Visual%20Studio%20Code/</url>
    
    <content type="html"><![CDATA[<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><ul><li>Better Comments: Improve your code commenting by annotating with alert, informational, TODOs, and more!</li><li>Bracket Pair Colorizer: A customizable extension for colorizing matching brackets.</li><li>Material Icon Theme: Material Design Icons for Visual Studio Code.</li><li>One Dark Pro: Atom’s iconic One Dark theme for Visual Studio Code.</li><li>Open in browser: This allows you to open the current file in your default browser or application.</li><li>Partial Diff: Compare (diff) text selections within a file, across files, or to the clipboard.</li></ul><p><a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets">Snippets in Visual Studio Code</a></p><h1 id="VScode中创建你的代码模板"><a href="#VScode中创建你的代码模板" class="headerlink" title="VScode中创建你的代码模板"></a>VScode中创建你的代码模板</h1><p><a href="https://www.zhihu.com/people/evil-rabbit"><img src="https://picx1.zhimg.com/v2-aa23ac6928f505c4dc85facf645fa7a3_l.jpg?source=172ae18b" alt="Evil rabbit"></a></p><p><a href="https://www.zhihu.com/people/evil-rabbit">Evil rabbit</a></p><p><a href="https://www.zhihu.com/question/48510028">​</a></p><p>酒泉数维网络技术有限公司 创始人兼CEO</p><p>​关注他</p><p>74 人赞同了该文章</p><p>在使用VSCode作为非生产力工具时，大家有没有感觉，每个课程都要创建文件，都要写一堆include什么的，贼烦。</p><p>那么咱们今天来介绍一下模板，可以一键生成咱们设置好的模板，方便咱们学习。（本文以C++的cpp文件为例，其余语言同理，修改构建文件即可）</p><h3 id="1-选择菜单里的-文件-首选项-用户代码片段"><a href="#1-选择菜单里的-文件-首选项-用户代码片段" class="headerlink" title="1.选择菜单里的 文件 &gt; 首选项 &gt; 用户代码片段"></a>1.选择菜单里的 文件 &gt; 首选项 &gt; 用户代码片段</h3><p><img src="https://pic3.zhimg.com/80/v2-fb91dd4d2968a8866b866c85be38b7d6_720w.webp"></p><h3 id="2-选择你需要自定义模板的文件，以cpp为例"><a href="#2-选择你需要自定义模板的文件，以cpp为例" class="headerlink" title="2.选择你需要自定义模板的文件，以cpp为例"></a>2.选择你需要自定义模板的文件，以cpp为例</h3><p><img src="https://pic2.zhimg.com/80/v2-73b00958b2841ebfd9c1cc161519a96d_720w.webp"></p><h3 id="3-配置对应文件json"><a href="#3-配置对应文件json" class="headerlink" title="3. 配置对应文件json"></a>3. 配置对应文件json</h3><p>把代码片段写在json里。每个代码段都是在一个代码片段名称下定义的，并且有prefix、body和description。prefix是用来触发代码片段的。使用 $1，$2 等指定光标位置，这些数字指定了光标跳转的顺序，$0表示最终光标位置。</p><p>注意：<strong>新文件中可能会有解释代码，是用来生成空的文档的，需要将他们全部注释，包括括号（统统注释）</strong></p><h3 id="在cpp-json的大括号中，书写如下代码："><a href="#在cpp-json的大括号中，书写如下代码：" class="headerlink" title="在cpp.json的大括号中，书写如下代码："></a>在<code>cpp.json</code>的大括号中，书写如下代码：</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;Print to conaole&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;prefix&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;C++&quot;</span><span class="hljs-punctuation">,</span>    <span class="hljs-comment">//在新建立的页面中输入C++就会有智能提示，Tab就自动生成好了</span><br>    <span class="hljs-attr">&quot;body&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;#include &lt;iostream&gt;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;#include &lt;cmath&gt;&quot;</span><span class="hljs-punctuation">,</span>     <span class="hljs-comment">//这个头文件可以删除，我为了使用方便就加了</span><br>        <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//空行</span><br>        <span class="hljs-string">&quot;using namespace std;&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//标准命名空间</span><br>        <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;int main()&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-comment">//main()函数</span><br>        <span class="hljs-string">&quot;&#123;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;   $0&quot;</span><span class="hljs-punctuation">,</span>    <span class="hljs-comment">//最终光标会在这里等待输入</span><br>        <span class="hljs-string">&quot;   system(\&quot;pause\&quot;);&quot;</span><span class="hljs-punctuation">,</span>    <span class="hljs-comment">//标准C++的等待用户动作</span><br>        <span class="hljs-string">&quot;   return 0;&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//结束</span><br>        <span class="hljs-string">&quot;&#125;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;A cpp file template.&quot;</span>   <span class="hljs-comment">//用户输入后智能提示的内容（你可以用中文写“生成C++模板”）</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="4-在-cpp文件中使用模板"><a href="#4-在-cpp文件中使用模板" class="headerlink" title="4.在.cpp文件中使用模板"></a>4.在<code>.cpp</code>文件中使用模板</h3><p><img src="https://pic4.zhimg.com/80/v2-16bcfda27023311237e2574b227edb5b_720w.webp"></p><p>发现可以愉快地玩耍了！</p><p><img src="https://pic3.zhimg.com/80/v2-888294387b563092aeb0162247527eca_720w.webp"></p><h3 id="5-写在最后"><a href="#5-写在最后" class="headerlink" title="5.写在最后"></a>5.写在最后</h3><ul><li>发现其实按照软件中自带的介绍定制自己需要的一些小功能，这种体验非常不错。</li><li>查到了snippets插件，但是想了想，还是自己写比较简单…对于目前只对新建文件产生的需求来说，而且我也不是太喜欢安装太多东西，强迫症嘛，蛤蛤蛤。</li><li>VSCode背景怎么设置的？请移步参考<a href="https://link.zhihu.com/?target=https://blog.yujiay.wang/sbgvscodec.html">如何修改全透明背景的vscode</a>（来着兔子的Blog）.</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/software/detail/git/"/>
    <url>/2024/07/27/software/detail/git/</url>
    
    <content type="html"><![CDATA[<p>git –version<br>clear # clear screen<br>git config –global user.name “someone” # setting up username<br>git config –global user.email “someone@email” # setting up email<br>git init # initialization of the respository<br>git config [–global] core.autocrlf false # LF: the newline character of Linux and Unix; CRLF: the newline character of Windows<br>git add test.txt<br>git commit -m “comment” test.txt<br>git status</p><h1 id="log-presentation"><a href="#log-presentation" class="headerlink" title="log presentation"></a>log presentation</h1><ul><li>git log # 分页</li><li>git log –pretty&#x3D;oneline</li><li>git log –oneline</li><li>git reflog</li></ul><p>git reset –hard [index] # 版本前进或后退，本地库指针移动的同时，重置暂存区和工作区<br>git reset –mixed [index] # 版本前进或后退，本地库指针移动的同时，重置暂存区，工作区不动<br>git reset –soft [index] # 版本前进或后退，本地库指针移动的同时，暂存区和工作区不动<br>git diff [filename] # 将工作区中的文件和暂存区中文件进行比较<br>git diff # 比较工作区和暂存区中所有文件的差异<br>git branch -v # 查看分支<br>git branch [branch01] # 创建分支<br>git checkout [branch01] # 切换分支<br>git merge [branch01] # 将分支合并到主分支中<br>(master|MERGING) # 合并冲突，解决冲突问题后，git commit -m “解决了冲突问题”<br>git remote -v # 查看别名<br>git remote add [name] [HTTPS] # 远程库起别名<br>git push [name] [master] # 将本地库 master 内容提交到远程库 master 中<br>git clone [HTTPS] # 将远程库中的内容 clone 到本地库<br>git pull [name] master # 远程库的拉取</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/27/software/detail/tecplot2018%20linux/"/>
    <url>/2024/07/27/software/detail/tecplot2018%20linux/</url>
    
    <content type="html"><![CDATA[<h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><p>chmod +x tecplot360ex2018r1_linux64.sh<br>.&#x2F;tecplot360ex2018r1_linux64.sh<br>Add <code>127.0.0.1 download.tecplot.com</code> to your hosts file, located <code>\etc\hosts</code></p><h1 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h1><p>Tecplot 运行报错:<br><code>./tec360-bin: symbol lookup error: /lib64/libfontconfig.so.1: undefined symbol: FT_Done_MM_Var</code><br>原因<br>tecplot 安装目录中的 tecplot360ex&#x2F;bin&#x2F;libfreetype.so.6 动态库版本低于 Fedora32&#x2F;33 系统中的 libfreetype.so.6 动态库版本，导致系统启动 tecplot 时找不到低版本动态库中定义的变量 FT_Done_MM_Var<br>Fedora32&#x2F;33 系统中的 libGL.so 动态库的版本过高，与 tecplot2016&#x2F;2017 运行所需的 libGL.so 版本不匹配。<br>解决方法<br>首先，<strong>删除 tecplot 安装目录中的 tecplot360ex&#x2F;bin&#x2F;libfreetype.so.6 动态库</strong><br>其次，由于 tecplot 安装目录里有自带的与 tecplot 相匹配的 libGL.so，该库位于 tecplotex360&#x2F;bin&#x2F;mesa 中，因此只需将 tecplot 安装目录下的 tecplotex360&#x2F;bin&#x2F;mesa 路径加入到 Linux 系统的动态库路径 LD_LIBRARY_PATH 中，<strong>即在~&#x2F;.bashrc 配置文件中加入如下代码<code>export LD_LIBRARY_PATH=$HOME/tecplotex/bin/mesa:$LD_LIBRARY_PATH</code></strong></p><h1 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h1><p>write the code to <code>~/.bashrc</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-string">&quot;/usr/local/tecplot2018/360ex_2018r1/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TECPHYFILE</span>=<span class="hljs-variable">$HOME</span>/.tecplot.phy<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">LD_LIBRARY_PATH</span>=<span class="hljs-string">&quot;/usr/local/tecplot2018360ex_2018r1/bin:<span class="hljs-variable">$LD_LIBRARY_PATH</span>&quot;</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">LD_LIBRARY_PATH</span>=<span class="hljs-string">&quot;/usr/local/tecplot2018360ex_2018r1/bin/mesa:<span class="hljs-variable">$LD_LIBRARY_PATH</span>&quot;</span><br></code></pre></td></tr></table></figure><p>Copy rlm folder to desired place<code>./rlm</code></p><p><code>tec360 -mesa</code><br>When asked for license choose “Network license”<br>and give “License server name”: localhost or <code>127.0.0.1</code><br>and “Port number” <code>5053</code><br><strong>In order for application working u must have rlm.exe running as long work with it.</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Software Recommendations</title>
    <link href="/2024/07/07/software/Software%20Recommendations/"/>
    <url>/2024/07/07/software/Software%20Recommendations/</url>
    
    <content type="html"><![CDATA[<ul><li>utools: <a href="https://u.tools/">uTools 官网 - 新一代效率工具平台</a></li><li>tecplot：云图 [[tecplot2018 linux]]</li><li>origin：框图</li><li>endnote：文献管理</li><li>Zotero：文献管理 [[Zotero+Sci-Hub]]</li><li>Mathtype：公式输入</li><li>ANSYS：模拟软件</li><li>Matlab</li><li>格式工厂：视频转换</li><li>Office</li><li>Potplayer：视频播放</li><li>foorbar: <a href="https://www.foobar2000.org/">音乐播放</a></li><li>everything：文件搜索</li><li>Obsidian：日志管理</li><li>git：[[版本控制Git]]</li><li>HPC SDK：OpenACC 编译器<a href="https://developer.nvidia.cn/nvidia-hpc-sdk-219-downloads">NVIDIA HPC SDK 21.9 Downloads | NVIDIA Developer</a></li><li>MobaXterm：终端连接</li><li>Visual Studio Code: [[Visual Studio Code]]</li><li>数学公式识别神器: <a href="https://mathpix.com/">Mathpix Snip</a></li><li>制作系统盘: <a href="https://rufus.ie/zh/">rufus</a></li></ul><ul><li><strong>CPU-Z</strong>: <a href="%5BCPUID%5D(https://www.cpuid.com/)">system information software</a></li><li><strong>IObit Unistaller</strong>: <a href="https://www.iobit.com/en/index.php?s">Clean, Optimize, Speed Up and Secure PC - Freeware Download - IObit</a></li></ul><ul><li>vim</li><li><a href="https://www.zotero.org/support/installation">Zotero</a></li><li>Obsidian</li><li>iTab</li><li><a href="https://code.visualstudio.com/docs/setup/linux">code</a></li><li><a href="https://docs.conda.io/en/latest/miniconda.html#linux-installers">Miniconda</a></li><li>GIMP</li><li><a href="https://inkscape.org/">INKSCAPE</a></li><li>goldendict <code>sudo apt install goldendict</code></li><li>paraview</li><li><a href="https://zhuanlan.zhihu.com/p/519732843">CMake</a></li><li><a href="https://meeting.tencent.com/">Wemeet</a></li><li><a href="https://u.tools/">utools</a></li><li><a href="https://www.doxygen.nl/index.html">Doxygen</a></li><li>Graphviz</li></ul>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>software</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
